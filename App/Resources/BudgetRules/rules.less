// import Protolus less base macro environment
@import "../less-base/include-base";

hr{
    margin-top: 30px;
    border: 1px dashed darken(@lightBase, 20%);
    border-bottom-color: lighten(@lightBase, 20%);
    &.or{
        width:300px;
        &:after{
            content: 'or';
            display: block;
            position:absolute;
            margin-left:140px;
            padding-right: 5px;
            padding-left: 5px;
            background-color: @lightBase;
            margin-top: -0.5em;
            .monochromeForeground(@darkBase, base);
        }
    }
}

@lineWeight : 2px;
@nodeSize : 40px;
@lineColor : black;
@rounding : 10px;


#rules{
    margin-right : 30%;
    padding-right : 20px;
}

#rules.boxes{
    .rules.node{
        min-width : @nodeSize;
        min-height : @nodeSize;
        .rounded(@rounding);
        background-color : #FF0000;
        border : @lineWeight solid @lineColor;
        .shadowed(4px, 0.7);
        overflow : hidden;
        padding : 10px;
    }
    .rules.linkable{
        margin-right: @nodeSize;
    }
    .rules.node:last-of-type > .link{
        width : 0px;
        
    }
    .rules.link{
        //width : @nodeSize;
        //height : @lineWeight;
        //background-color : #000000;
        //position : absolute;
        //margin-top : (@nodeSize + @lineWeight)/2;
        //margin-left : @nodeSize + 10px + @lineWeight;
        //.shadowed(4px, 0.7);*/
    }
    .rules.container{
        padding : @nodeSize/2;
        min-width : @nodeSize;
        min-height : @nodeSize;
        border : @lineWeight dotted @lineColor;
        .advanced_container{
            background-color : #DDDDDD;
            border : @lineWeight solid @lineColor;
            .rounded(@rounding);
        }
        .basic_container{
            background-color : #CCCCCC;
            border : @lineWeight dashed @lineColor;
            min-height : 50px;
            .rounded(@rounding);
        }
    }
}

#rules.code{
    .rules.node{
        border : 1px dotted grey;
        padding : 2px;
        display :inline-block;
        font-size : 9px;
    }
    .rules.node.statement{
        //display :block;
    }
    .rules.node.assignment{
        //display :block;
    }
    .subject + .predicate:before{
        content : "=";
        display : 'inline-block';
    }
    .linkable:last-of-type:after{
        //content : ";";
        //display : 'block';
    }
    .rules.node.statement:after{
        //content : ";";
        //display : 'block';
    }
    .rules.linkable{
        display :inline-block;
    }
    .call .arguments{
        .rounded(10px);
        min-height : 12px;
        border : 2px solid black;
        border-top-width: 0px;
        border-bottom-width: 0px;
    }
    .rules.separator{
        content : ";";
        display : 'block';
    }
    .rules.node.assignment:after{
        //content : ";";
        //display : 'block';
    }
}

.inspector{
    position : fixed;
    display : block;
    top :0px;
    right: 0px;
    width : 30%;
    padding : 20px;
}